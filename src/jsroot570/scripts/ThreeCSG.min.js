(function(p){if("function"===typeof define&&define.amd)define(["threejs"],p);else if("object"===typeof exports&&"undefined"!==typeof module)p(require("three"),exports);else{if("undefined"==typeof THREE)throw Error("THREE is not defined","ThreeCSG.js");ThreeBSP=p(THREE)}})(function(p,c){c||(c={});c.Geometry=function(a,b,g,n){if(a instanceof p.Geometry)this.matrix=null;else if(a instanceof p.Mesh)a.updateMatrix(),b=this.matrix=a.matrix.clone(),a=a.geometry;else{if(a instanceof c.Node)return this.tree=
a,this.matrix=null,this;if(a instanceof p.BufferGeometry){var e=a.getAttribute("position").array;a=a.getAttribute("normal").array;for(var l=[],m,d,h,f,k=0;k<e.length;k+=9)m=new c.Polygon,d=new c.Vertex(e[k],e[k+1],e[k+2],a[k],a[k+1],a[k+2]),b&&d.applyMatrix4(b),h=new c.Vertex(e[k+3],e[k+4],e[k+5],a[k+3],a[k+4],a[k+5]),b&&h.applyMatrix4(b),f=new c.Vertex(e[k+6],e[k+7],e[k+8],a[k+6],a[k+7],a[k+8]),b&&f.applyMatrix4(b),n?m.vertices.push(d,f,h):m.vertices.push(d,h,f),m.calculateProperties(),l.push(m);
this.tree=new c.Node(l,g);void 0!==g&&(this.maxid=this.tree.maxnodeid);return this}if(a.polygons&&a.polygons[0]instanceof c.Polygon){l=a.polygons;for(k=0;k<l.length;++k){m=l[k];if(b)for(a=0;a<m.vertices.length;++a)m.vertices[a].applyMatrix4(b);m.calculateProperties()}this.tree=new c.Node(l,g);void 0!==g&&(this.maxid=this.tree.maxnodeid);return this}throw"ThreeBSP: Given geometry is unsupported";}l=[];n=a.faces.length;for(k=0;k<n;++k){e=a.faces[k];h=e.normal;m=new c.Polygon;if(e instanceof p.Face3)f=
e.vertexNormals&&3==e.vertexNormals.length,d=a.vertices[e.a],f&&(h=e.vertexNormals[0]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d),d=a.vertices[e.b],f&&(h=e.vertexNormals[1]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d),d=a.vertices[e.c],f&&(h=e.vertexNormals[2]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d);else if(typeof p.Face4)f=e.vertexNormals&&4==e.vertexNormals.length,d=a.vertices[e.a],
f&&(h=e.vertexNormals[0]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d),d=a.vertices[e.b],f&&(h=e.vertexNormals[1]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d),d=a.vertices[e.c],f&&(h=e.vertexNormals[2]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d),d=a.vertices[e.d],f&&(h=e.vertexNormals[3]),d=new c.Vertex(d.x,d.y,d.z,h.x,h.y,h.z),b&&d.applyMatrix4(b),m.vertices.push(d);else throw"Invalid face type at index "+
k;m.calculateProperties();l.push(m)}this.tree=new c.Node(l,g);void 0!==g&&(this.maxid=this.tree.maxnodeid)};c.Geometry.prototype.subtract=function(a){var b=this.tree.clone();a=a.tree.clone();b.invert();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.allPolygons());b.invert();b=new c.Geometry(b);b.matrix=this.matrix;return b};c.Geometry.prototype.union=function(a){var b=this.tree.clone();a=a.tree.clone();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.allPolygons());
b=new c.Geometry(b);b.matrix=this.matrix;return b};c.Geometry.prototype.intersect=function(a){var b=this.tree.clone();a=a.tree.clone();b.invert();a.clipTo(b);a.invert();b.clipTo(a);a.clipTo(b);b.build(a.allPolygons());b.invert();b=new c.Geometry(b);b.matrix=this.matrix;return b};c.Geometry.prototype.tryToCompress=function(a){if(void 0!==this.maxid){var b=[],g,c=0,e,l=a.length,m,d,h,f;for(e=0;e<l;++e){var k=a[e];void 0!==k.id&&(void 0===b[k.id]&&(b[k.id]=[]),b[k.id].push(k))}for(e=0;e<b.length;++e)if(k=
b[e],void 0!==k)for(l=k.length,g=1<l;g;)for(g=!1,h=0;h<l-1;++h)if((m=k[h])&&m.parent)for(f=h+1;f<l;++f)if((d=k[f])&&m.parent===d.parent&&m.nsign===d.nsign){m.nsign!==m.parent.nsign&&m.parent.flip();c++;k[h]=m.parent;k[f]=null;3>m.parent.vertices.length&&console.log("something wrong with parent");g=!0;break}if(0<c)for(a.splice(0,a.length),e=0;e<b.length;++e)if(k=b[e],void 0!==k)for(h=0,l=k.length;h<l;++h)k[h]&&a.push(k[h])}};c.Geometry.prototype.direct_subtract=function(a){var b=this.tree;a=a.tree;
b.invert();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.collectPolygons([]));b.invert();return this};c.Geometry.prototype.direct_union=function(a){var b=this.tree;a=a.tree;b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.collectPolygons([]));return this};c.Geometry.prototype.direct_intersect=function(a){var b=this.tree;a=a.tree;b.invert();a.clipTo(b);a.invert();b.clipTo(a);a.clipTo(b);b.build(a.collectPolygons([]));b.invert();return this};c.CreateNormal=function(a,
b,g){if(!g||1E4>g)g=1E4;switch(a){case "x":var n=new c.Vertex(b,-3*g,g,1,0,0);var e=new c.Vertex(b,g,g,1,0,0);var l=new c.Vertex(b,g,-3*g,1,0,0);break;case "y":n=new c.Vertex(-3*g,b,g,0,1,0);l=new c.Vertex(g,b,g,0,1,0);e=new c.Vertex(g,b,-3*g,0,1,0);break;case "z":n=new c.Vertex(-3*g,g,b,0,0,1),e=new c.Vertex(g,g,b,0,0,1),l=new c.Vertex(g,-3*g,b,0,0,1)}a=new c.Polygon([n,l,e]);a.calculateProperties();a=new c.Node([a]);return new c.Geometry(a)};c.Geometry.prototype.cut_from_plane=function(a){var b=
this.tree;a=a.tree;b.invert();a.clipTo(b);return this};c.Geometry.prototype.toGeometry=function(){var a,b,g=this.matrix?(new p.Matrix4).getInverse(this.matrix):null,c=new p.Geometry,e=this.tree.collectPolygons([]),l=e.length,m={};for(a=0;a<l;++a){var d=e[a];var h=d.vertices.length;for(b=2;b<h;++b){var f=d.vertices[0];f=new p.Vector3(f.x,f.y,f.z);g&&f.applyMatrix4(g);if("undefined"!==typeof m[f.x+","+f.y+","+f.z])var k=m[f.x+","+f.y+","+f.z];else c.vertices.push(f),k=m[f.x+","+f.y+","+f.z]=c.vertices.length-
1;f=d.vertices[b-1];f=new p.Vector3(f.x,f.y,f.z);g&&f.applyMatrix4(g);if("undefined"!==typeof m[f.x+","+f.y+","+f.z])var r=m[f.x+","+f.y+","+f.z];else c.vertices.push(f),r=m[f.x+","+f.y+","+f.z]=c.vertices.length-1;f=d.vertices[b];f=new p.Vector3(f.x,f.y,f.z);g&&f.applyMatrix4(g);"undefined"!==typeof m[f.x+","+f.y+","+f.z]?f=m[f.x+","+f.y+","+f.z]:(c.vertices.push(f),f=m[f.x+","+f.y+","+f.z]=c.vertices.length-1);k=new p.Face3(k,r,f,new p.Vector3(d.normal.x,d.normal.y,d.normal.z));c.faces.push(k)}}return c};
c.Geometry.prototype.scale=function(a,b,g){for(var c=this.tree.collectPolygons([]),e=0;e<c.length;++e){for(var l=c[e],m=0;m<l.vertices.length;++m){var d=l.vertices[m];d.x*=a;d.y*=b;d.z*=g}delete l.normal;l.calculateProperties()}};c.Geometry.prototype.toPolygons=function(){var a=this.tree.collectPolygons([]);this.tryToCompress(a);for(var b=0;b<a.length;++b)delete a[b].id,delete a[b].parent;return a};c.Geometry.prototype.toBufferGeometry=function(){return c.CreateBufferGeometry(this.toPolygons())};
c.CreateBufferGeometry=function(a){function b(a){l[d]=a.x;l[d+1]=a.y;l[d+2]=a.z;m[d]=h.nsign*a.nx;m[d+1]=h.nsign*a.ny;m[d+2]=h.nsign*a.nz;d+=3}var g,c,e=a.length;for(g=c=0;g<e;++g)c+=9*(a[g].vertices.length-2);var l=new Float32Array(c),m=new Float32Array(c),d=0;for(g=0;g<e;++g){var h=a[g];for(c=2;c<h.vertices.length;++c)b(h.vertices[0]),b(h.vertices[c-1]),b(h.vertices[c])}a=new p.BufferGeometry;a.addAttribute("position",new p.BufferAttribute(l,3));a.addAttribute("normal",new p.BufferAttribute(m,3));
return a};c.Geometry.prototype.toMesh=function(a){var b=this.toGeometry();a=new p.Mesh(b,a);this.matrix&&(a.position.setFromMatrixPosition(this.matrix),a.rotation.setFromRotationMatrix(this.matrix));return a};c.Polygon=function(a,b,c){a instanceof Array||(a=[]);this.vertices=a;this.nsign=1;0<a.length?this.calculateProperties():this.normal=this.w=void 0};c.Polygon.prototype.copyProperties=function(a,b){this.normal=a.normal;this.w=a.w;this.nsign=a.nsign;b&&void 0!==a.id&&(this.id=a.id,this.parent=a);
return this};c.Polygon.prototype.calculateProperties=function(){if(!this.normal){var a=this.vertices[0],b=this.vertices[1],c=this.vertices[2];this.nsign=1;this.normal=b.clone().subtract(a).cross(c.clone().subtract(a)).normalize();this.w=this.normal.clone().dot(a);return this}};c.Polygon.prototype.clone=function(){for(var a=this.vertices.length,b=new c.Polygon,g=0;g<a;++g)b.vertices.push(this.vertices[g].clone());return b.copyProperties(this)};c.Polygon.prototype.flip=function(){this.nsign*=-1;this.vertices.reverse();
return this};c.Polygon.prototype.classifyVertex=function(a){a=this.nsign*(this.normal.dot(a)-this.w);return-1E-5>a?2:1E-5<a?1:0};c.Polygon.prototype.classifySide=function(a){var b,c=0,n=0,e=a.vertices.length;for(b=0;b<e;++b){var l=this.classifyVertex(a.vertices[b]);1===l?++c:2===l&&++n}return 0<c&&0===n?1:0===c&&0<n?2:0===c&&0===n?0:3};c.Polygon.prototype.splitPolygon=function(a,b,g,n,e){var l=this.classifySide(a);if(0===l)(0<this.nsign*a.nsign*this.normal.dot(a.normal)?b:g).push(a);else if(1===l)n.push(a);
else if(2===l)e.push(a);else{b=a.vertices.length;g=this.normal.x;l=this.normal.y;var m=this.normal.z,d,h=[],f=[];for(d=0;d<b;++d){var k=(d+1)%b;var p=a.vertices[d];k=a.vertices[k];var q=this.classifyVertex(p);var t=this.classifyVertex(k);2!=q&&h.push(p);1!=q&&f.push(p);3===(q|t)&&(q=(this.w-(g*p.x+l*p.y+m*p.z))/(g*(k.x-p.x)+l*(k.y-p.y)+m*(k.z-p.z)),p=p.interpolate(k,q),h.push(p),f.push(p))}3<=h.length&&n.push((new c.Polygon(h)).copyProperties(a,!0));3<=f.length&&e.push((new c.Polygon(f)).copyProperties(a,
!0))}};c.Vertex=function(a,b,c,n,e,l){this.x=a;this.y=b;this.z=c;this.nx=n;this.ny=e;this.nz=l};c.Vertex.prototype.setnormal=function(a,b,c){this.nx=a;this.ny=b;this.nz=c};c.Vertex.prototype.clone=function(){return new c.Vertex(this.x,this.y,this.z,this.nx,this.ny,this.nz)};c.Vertex.prototype.add=function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this};c.Vertex.prototype.subtract=function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this};c.Vertex.prototype.multiplyScalar=function(a){this.x*=
a;this.y*=a;this.z*=a;return this};c.Vertex.prototype.cross=function(a){var b=this.x,c=this.y,n=this.z;this.x=c*a.z-n*a.y;this.y=n*a.x-b*a.z;this.z=b*a.y-c*a.x;return this};c.Vertex.prototype.normalize=function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);this.x/=a;this.y/=a;this.z/=a;return this};c.Vertex.prototype.dot=function(a){return this.x*a.x+this.y*a.y+this.z*a.z};c.Vertex.prototype.diff=function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;var n=this.x*this.x+this.y*this.y+
this.z*this.z;return(b*b+c*c+a*a)/(0<n?n:1E-10)};c.Vertex.prototype.interpolate=function(a,b){var g=1-b;return new c.Vertex(this.x*g+a.x*b,this.y*g+a.y*b,this.z*g+a.z*b,this.nx*g+a.nx*b,this.ny*g+a.ny*b,this.nz*g+a.nz*b)};c.Vertex.prototype.applyMatrix4=function(a){var b=this.x,c=this.y,n=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*n+a[12];this.y=a[1]*b+a[5]*c+a[9]*n+a[13];this.z=a[2]*b+a[6]*c+a[10]*n+a[14];b=this.nx;c=this.ny;n=this.nz;this.nx=a[0]*b+a[4]*c+a[8]*n;this.ny=a[1]*b+a[5]*c+a[9]*n;
this.nz=a[2]*b+a[6]*c+a[10]*n;return this};c.Node=function(a,b){this.polygons=[];this.front=this.back=void 0;if(a instanceof Array&&0!==a.length){this.divider=a[0].clone();for(var g=a.length,n=[],e=[],l=0;l<g;++l)void 0!==b&&(a[l].id=b++,delete a[l].parent),this.divider.splitPolygon(a[l],this.polygons,this.polygons,n,e);void 0!==b&&(this.maxnodeid=b);0<n.length&&(this.front=new c.Node(n));0<e.length&&(this.back=new c.Node(e))}};c.Node.isConvex=function(a){var b,c,n=a.length;for(b=0;b<n;++b)for(c=
0;c<n;++c)if(b!==c&&2!==a[b].classifySide(a[c]))return!1;return!0};c.Node.prototype.build=function(a){var b=a.length,g=[],n=[];this.divider||(this.divider=a[0].clone());for(var e=0;e<b;++e)this.divider.splitPolygon(a[e],this.polygons,this.polygons,g,n);0<g.length&&(this.front||(this.front=new c.Node),this.front.build(g));0<n.length&&(this.back||(this.back=new c.Node),this.back.build(n))};c.Node.prototype.collectPolygons=function(a){for(var b=this.polygons.length,c=0;c<b;++c)a.push(this.polygons[c]);
this.front&&this.front.collectPolygons(a);this.back&&this.back.collectPolygons(a);return a};c.Node.prototype.allPolygons=function(){var a=this.polygons.slice();this.front&&(a=a.concat(this.front.allPolygons()));this.back&&(a=a.concat(this.back.allPolygons()));return a};c.Node.prototype.numPolygons=function(){var a=this.polygons.length;this.front&&(a+=this.front.numPolygons());this.back&&(a+=this.back.numPolygons());return a};c.Node.prototype.clone=function(){var a=new c.Node;a.divider=this.divider.clone();
a.polygons=this.polygons.map(function(a){return a.clone()});a.front=this.front&&this.front.clone();a.back=this.back&&this.back.clone();return a};c.Node.prototype.invert=function(){for(var a=this.polygons.length,b=0;b<a;++b)this.polygons[b].flip();this.divider.flip();this.front&&this.front.invert();this.back&&this.back.invert();a=this.front;this.front=this.back;this.back=a;return this};c.Node.prototype.clipPolygons=function(a){if(!this.divider)return a.slice();for(var b=a.length,c=[],n=[],e=0;e<b;++e)this.divider.splitPolygon(a[e],
c,n,c,n);this.front&&(c=this.front.clipPolygons(c));n=this.back?this.back.clipPolygons(n):[];return c.concat(n)};c.Node.prototype.clipTo=function(a){this.polygons=a.clipPolygons(this.polygons);this.front&&this.front.clipTo(a);this.back&&this.back.clipTo(a)};return c});
