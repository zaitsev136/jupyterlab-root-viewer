JSROOT={BIT:function(a){return 1<<a}};importScripts("three.min.js","ThreeCSG.js","JSRootGeoBase.js");var clones=null;
onmessage=function(a){if("string"==typeof a.data)console.log("Worker get message "+a.data);else if("object"==typeof a.data){a.data.tm1=(new Date).getTime();if(a.data.init){var c=a.data.clones;c&&(clones=new JSROOT.GEO.ClonedNodes(null,c),delete a.data.clones,clones.sortmap=a.data.sortmap);JSROOT.browser=a.data.browser;a.data.tm2=(new Date).getTime();return postMessage(a.data)}if(a.data.shapes){c=a.data.shapes;for(var f=[],d=0;100>d;++d){var b=clones.BuildShapes(c,a.data.limit,1E3);if(b.done)break;
postMessage({progress:"Worker creating: "+b.shapes+" / "+c.length+" shapes,  "+b.faces+" faces"})}for(d=0;d<c.length;++d){b=c[d];if(b.geom){if(b.geom instanceof THREE.BufferGeometry)var e=b.geom;else e=new THREE.BufferGeometry,e.fromGeometry(b.geom);b.buf_pos=e.attributes.position.array;b.buf_norm=e.attributes.normal.array;f.push(b.buf_pos.buffer,b.buf_norm.buffer);delete b.geom}delete b.shape}a.data.tm2=(new Date).getTime();return postMessage(a.data,f)}if(void 0!==a.data.collect)return clones.MarkVisisble(!1,
!1,a.data.visible),delete a.data.visible,c=null,a.data.matrix&&(c=(new THREE.Matrix4).fromArray(a.data.matrix)),delete a.data.matrix,b=clones.CollectVisibles(a.data.collect,JSROOT.GEO.CreateFrustum(c),a.data.collect_nodes),a.data.new_nodes=b.lst,a.data.complete=b.complete,a.data.tm2=(new Date).getTime(),postMessage(a.data)}};
